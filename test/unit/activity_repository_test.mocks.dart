// Mocks generated by Mockito 5.4.5 from annotations
// in rtm_visits/test/unit/activity_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:connectivity_plus/connectivity_plus.dart' as _i6;
import 'package:connectivity_plus_platform_interface/connectivity_plus_platform_interface.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rtm_visits/features/activities/data/datasources/activity_local_data_source.dart'
    as _i5;
import 'package:rtm_visits/features/activities/data/datasources/activity_remote_data_source.dart'
    as _i2;
import 'package:rtm_visits/features/activities/data/models/activity_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ActivityRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityRemoteDataSource extends _i1.Mock
    implements _i2.ActivityRemoteDataSource {
  MockActivityRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ActivityModel>> getActivities() => (super.noSuchMethod(
        Invocation.method(
          #getActivities,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.ActivityModel>>.value(<_i4.ActivityModel>[]),
      ) as _i3.Future<List<_i4.ActivityModel>>);
}

/// A class which mocks [ActivityLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityLocalDataSource extends _i1.Mock
    implements _i5.ActivityLocalDataSource {
  MockActivityLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.ActivityModel>> getActivities() => (super.noSuchMethod(
        Invocation.method(
          #getActivities,
          [],
        ),
        returnValue:
            _i3.Future<List<_i4.ActivityModel>>.value(<_i4.ActivityModel>[]),
      ) as _i3.Future<List<_i4.ActivityModel>>);

  @override
  _i3.Future<void> cacheActivities(List<_i4.ActivityModel>? activities) =>
      (super.noSuchMethod(
        Invocation.method(
          #cacheActivities,
          [activities],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [Connectivity].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnectivity extends _i1.Mock implements _i6.Connectivity {
  MockConnectivity() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Stream<List<_i7.ConnectivityResult>> get onConnectivityChanged =>
      (super.noSuchMethod(
        Invocation.getter(#onConnectivityChanged),
        returnValue: _i3.Stream<List<_i7.ConnectivityResult>>.empty(),
      ) as _i3.Stream<List<_i7.ConnectivityResult>>);

  @override
  _i3.Future<List<_i7.ConnectivityResult>> checkConnectivity() =>
      (super.noSuchMethod(
        Invocation.method(
          #checkConnectivity,
          [],
        ),
        returnValue: _i3.Future<List<_i7.ConnectivityResult>>.value(
            <_i7.ConnectivityResult>[]),
      ) as _i3.Future<List<_i7.ConnectivityResult>>);
}
